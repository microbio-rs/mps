syntax = "proto3";

package docker_proto;

service Container {
  rpc Build(BuildContainerRequest) returns (BuildContainerResponse);
  /* rpc ReadRepo(ReadRepoRequest) returns (ReadRepoResponse); */
  /* rpc UpdateRepo(UpdateRepoRequest) returns (UpdateRepoResponse); */
  /* rpc DeleteRepo(DeleteRepoRequest) returns (DeleteRepoResponse); */
}

message BuildContainerRequest {
  string local_path = 1;
  string repo_uri = 2;
  string tag = 3;
  string path = 4;
  string dockerfile_name = 5;
  string dockerfile_path = 6;
}

message BuildContainerResponse {
  enum Result {
    SUCCESS = 0;
    FAILURE = 1;
  }

  Result result = 1;
  BuildResponse build = 2;
}

/* message ReadRepoRequest { */
/*   string id = 1; */
/* } */

/* message ReadRepoResponse { */
/*   enum Result { */
/*     SUCCESS = 0; */
/*     FAILURE = 1; */
/*   } */

/*   Result result = 1; */
/*   RepoResponse render = 2; */
/* } */

/* message UpdateRepoRequest { */
/*   string id = 1; */
/*   string user_id = 2; */
/*   string name = 3; */
/*   string description = 4; */
/* } */

/* message UpdateRepoResponse { */
/*   enum Result { */
/*     SUCCESS = 0; */
/*     FAILURE = 1; */
/*   } */

/*   Result result = 1; */
/* } */

/* message DeleteRepoRequest { */
/*   string id = 1; */
/* } */

/* message DeleteRepoResponse { */
/*   enum Result { */
/*     SUCCESS = 0; */
/*     FAILURE = 1; */
/*   } */

/*   Result result = 1; */
/* } */

message BuildResponse {
  string repo_uri = 3;
}

