// Copyright (c) 2023 Murilo Ijanc' <mbsd@m0x.ru>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

syntax = "proto3";

package environment_proto;

service EnvironmentCrud {
  rpc CreateEnvironment(CreateEnvironmentRequest) returns (CreateEnvironmentResponse);
  /* rpc ReadEnvironment(ReadEnvironmentRequest) returns (ReadEnvironmentResponse); */
  /* rpc UpdateEnvironment(UpdateEnvironmentRequest) returns (UpdateEnvironmentResponse); */
  /* rpc DeleteEnvironment(DeleteEnvironmentRequest) returns (DeleteEnvironmentResponse); */
}

message CreateEnvironmentRequest {
  enum Mode {
    Production = 0;
    Staging = 1;
    Development = 2;
  }

  Mode mode = 1;
  string project_id = 2;
  string name = 4;
  optional string description = 5;
}

message CreateEnvironmentResponse {
  enum Result {
    SUCCESS = 0;
    FAILURE = 1;
  }

  Result result = 1;
  EnvironmentResponse environment = 2;
}

message EnvironmentResponse {
  enum Mode {
    Production = 0;
    Staging = 1;
    Development = 2;
  }

  Mode mode = 1;
  string id = 2;
  string project_id = 3;
  string name = 4;
  optional string description = 5;

  /* string created_at = 5; */
  /* string updated_at = 6; */
}

/* message ReadEnvironmentRequest { */
/*   string id = 1; */
/* } */

/* message ReadEnvironmentResponse { */
/*   enum Result { */
/*     SUCCESS = 0; */
/*     FAILURE = 1; */
/*   } */

/*   Result result = 1; */
/*   EnvironmentResponse environment = 2; */
/* } */

/* message UpdateEnvironmentRequest { */
/*   string id = 1; */
/*   string project_id = 2; */
/*   string name = 3; */
/*   string description = 4; */
/* } */

/* message UpdateEnvironmentResponse { */
/*   enum Result { */
/*     SUCCESS = 0; */
/*     FAILURE = 1; */
/*   } */

/*   Result result = 1; */
/* } */

/* message DeleteEnvironmentRequest { */
/*   string id = 1; */
/* } */

/* message DeleteEnvironmentResponse { */
/*   enum Result { */
/*     SUCCESS = 0; */
/*     FAILURE = 1; */
/*   } */

/*   Result result = 1; */
/* } */

