version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION:-7.5.1}
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_NUM_PARTITIONS=3
      - CONFLUENT_SUPPORT_METRICS_ENABLE=0
    ports: ["9092:9092"]
    links: [zookeeper]

  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION:-7.5.1}
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports: ["2181:2181"]

  rabbitmq:
    image: rabbitmq:3.8-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Porta para acesso aos clientes
      - "15672:15672"  # Porta para acesso ao painel de controle
    environment:
      RABBITMQ_DEFAULT_USER: "guest"  # Usuário padrão do RabbitMQ
      RABBITMQ_DEFAULT_PASS: "guest"  # Senha padrão do RabbitMQ
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Volume para dados persistentes

  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - "5432:5432"  # Porta padrão do PostgreSQL
    environment:
      POSTGRES_USER: "postgres"  # Usuário padrão do PostgreSQL
      POSTGRES_PASSWORD: "postgres"  # Senha padrão do PostgreSQL
      POSTGRES_DB: "mps"  # Nome do banco de dados a ser criado
    volumes:
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro  # Arquivo SQL de inicialização
      - postgres_data:/var/lib/postgresql/data  # Volume para dados persistentes do PostgreSQL

volumes:
  rabbitmq_data:
  postgres_data:

